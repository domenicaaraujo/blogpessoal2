{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domenica\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\blog c\\xE9u\\\\src\\\\componentes\\\\postagens\\\\deletarPostagem\\\\DeletarPostagem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Button, Box, Card, CardActions, CardContent } from \"@material-ui/core\";\nimport './DeletarPostagem.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { buscaId, deleteId } from '../../../services/Service';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeletarPostagem() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const token = useSelector(state => state.tokens);\n  const [post, setPosts] = useState();\n  useEffect(() => {\n    if (token == \"\") {\n      toast.error('Você precisa estar logade', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n      history.push(\"/login\");\n    }\n  }, [token]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    buscaId(`/postagens/${id}`, setPosts, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function sim() {\n    history.push('/posts');\n    deleteId(`/postagens/${id}`, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    toast.success('Postagem deletada com sucesso', {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: false,\n      theme: \"colored\",\n      progress: undefined\n    });\n  }\n\n  function nao() {\n    history.push('/postagens');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      m: 2,\n      className: \"back-delpost\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        className: \"ajust-delpost\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Deseja deletar a Postagem:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"delpost-style\",\n              children: post === null || post === void 0 ? void 0 : post.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"start\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mx: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: sim,\n                variant: \"contained\",\n                id: \"space4\",\n                className: \"botton btn-light\",\n                size: \"large\",\n                color: \"primary\",\n                children: \"Sim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: nao,\n                variant: \"contained\",\n                className: \"botton btn-dark\",\n                size: \"large\",\n                color: \"secondary\",\n                children: \"N\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(DeletarPostagem, \"w+Z/MWxUEeCeF/ZdWcJoGPU3698=\", false, function () {\n  return [useHistory, useParams, useSelector];\n});\n\n_c = DeletarPostagem;\nexport default DeletarPostagem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletarPostagem\");","map":{"version":3,"sources":["C:/Users/Domenica/OneDrive/Área de Trabalho/blog céu/src/componentes/postagens/deletarPostagem/DeletarPostagem.tsx"],"names":["React","useEffect","useState","Typography","Button","Box","Card","CardActions","CardContent","useHistory","useParams","buscaId","deleteId","useSelector","toast","DeletarPostagem","history","id","token","state","tokens","post","setPosts","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","findById","headers","sim","success","nao","titulo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {Typography, Button, Box, Card, CardActions, CardContent } from \"@material-ui/core\"\r\nimport './DeletarPostagem.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { UserState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction DeletarPostagem() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<UserState, UserState [\"tokens\"]>(\r\n      (state) => state.tokens\r\n  )\r\n    const [post, setPosts] = useState<Postagem>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logade', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/postagens/${id}`, setPosts, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        } \r\n\r\n        function sim() {\r\n            history.push('/posts')\r\n            deleteId(`/postagens/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Postagem deletada com sucesso', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n          });\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/postagens')\r\n          }\r\n  return (\r\n    <>\r\n      <Box m={2} className='back-delpost' display=\"flex\" justifyContent=\"center\">\r\n        <Card variant=\"outlined\" className='ajust-delpost'> \r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography className=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Postagem:\r\n              </Typography>\r\n              <Typography className='delpost-style' >\r\n              {post?.titulo}\r\n              </Typography>\r\n            </Box>\r\n\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\">\r\n              <Box mx={2}>\r\n              <Button onClick={sim} variant=\"contained\" id='space4' className=\"botton btn-light\" size='large' color=\"primary\">\r\n                Sim\r\n              </Button>\r\n              </Box>\r\n              <Box>\r\n              <Button  onClick={nao} variant=\"contained\" className=\"botton btn-dark\" size='large' color=\"secondary\">\r\n                Não\r\n              </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarPostagem;"]},"metadata":{},"sourceType":"module"}