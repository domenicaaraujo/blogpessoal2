{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domenica\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\blog c\\xE9u\\\\src\\\\paginas\\\\perfil\\\\atualizar\\\\PerfilAtualizar.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, FormControl, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { buscaId, put } from '../../../services/Service';\nimport './PerfilAtualizar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PerfilAtualizar() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const token = useSelector(state => state.tokens);\n  const userId = useSelector(state => state.id);\n  const [user, setUser] = useState({\n    id: 0,\n    nome: '',\n    usuario: '',\n    senha: '',\n    foto: ''\n  });\n  const [userResult, setUserResult] = useState({\n    id: +userId,\n    nome: '',\n    usuario: '',\n    senha: '',\n    foto: ''\n  });\n\n  function updatedPerfil(e) {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  useEffect(() => {\n    if (token === \"\") {\n      toast.error('Usuario precisa estar logado.', {\n        position: 'top-right',\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: 'colored',\n        progress: undefined\n      });\n      history.push(\"/login\");\n    }\n  }, [token]);\n  useEffect(() => {\n    setUser({ ...user\n    });\n  }, [user]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    await buscaId(`usuarios/${id}`, setUser, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  async function atualizar(e) {\n    e.preventDefault();\n\n    if (userResult.id == user.id && userResult.senha == user.senha) {\n      try {\n        await put(`/usuarios/atualizar`, user, setUserResult, {\n          headers: {\n            'Authorization': token\n          }\n        });\n        toast.success('Perfil atualizado com sucesso.', {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: false,\n          theme: 'colored',\n          progress: undefined\n        });\n      } catch (error) {\n        toast.info('Usuario deslogado.', {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: false,\n          draggable: false,\n          theme: 'colored',\n          progress: undefined\n        });\n      }\n    }\n\n    back();\n  }\n\n  function back() {\n    history.push('/perfil');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      className: \"largura\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: atualizar,\n        className: \"atualizar-perfil\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          className: \"h1-perfil\",\n          component: \"h1\",\n          align: \"center\",\n          children: \"Atualizar Perfil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: user.nome,\n          onChange: e => updatedPerfil(e),\n          id: \"nome\",\n          label: \"Nome Completo\",\n          variant: \"outlined\",\n          name: \"nome\",\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: user.usuario,\n          onChange: e => updatedPerfil(e),\n          id: \"usuario\",\n          label: \"E-mail\",\n          name: \"usuario\",\n          type: \"email\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: user.senha,\n          onChange: e => updatedPerfil(e),\n          id: \"senha\",\n          label: \"Senha\",\n          name: \"senha\",\n          type: \"password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: user.foto,\n          onChange: e => updatedPerfil(e),\n          id: \"foto\",\n          label: \"Foto\",\n          name: \"foto\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Finalizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PerfilAtualizar, \"WHIYPAQQ1+ok63BsNIPkoITKd0E=\", false, function () {\n  return [useHistory, useParams, useSelector, useSelector];\n});\n\n_c = PerfilAtualizar;\nexport default PerfilAtualizar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerfilAtualizar\");","map":{"version":3,"sources":["C:/Users/Domenica/OneDrive/Área de Trabalho/blog céu/src/paginas/perfil/atualizar/PerfilAtualizar.tsx"],"names":["Button","Container","FormControl","TextField","Typography","React","useEffect","useState","useSelector","useHistory","useParams","toast","buscaId","put","PerfilAtualizar","history","id","token","state","tokens","userId","user","setUser","nome","usuario","senha","foto","userResult","setUserResult","updatedPerfil","e","target","name","value","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","findById","headers","atualizar","preventDefault","success","info","back"],"mappings":"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","sourcesContent":["import { Button, Container, FormControl, TextField, Typography } from '@mui/material';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport User from '../../../models/User';\r\nimport { busca, buscaId, put } from '../../../services/Service';\r\nimport { UserState } from '../../../store/tokens/tokensReducer';\r\nimport './PerfilAtualizar.css'\r\n\r\nfunction PerfilAtualizar() { \r\n\r\n    let history = useHistory()\r\n\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    const token = useSelector<UserState, UserState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    )\r\n\r\n    const userId = useSelector<UserState, UserState[\"id\"]>(\r\n        (state) => state.id\r\n    );\r\n\r\n    const [user, setUser] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: '',\r\n            foto: ''\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<User>(\r\n        {\r\n            id: +userId,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: '',\r\n            foto: ''\r\n        })\r\n\r\n        function updatedPerfil(e: ChangeEvent<HTMLInputElement>) {\r\n            setUser({\r\n                ...user,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n\r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n            toast.error('Usuario precisa estar logado.', {\r\n                position: 'top-right',\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: 'colored',\r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        setUser({\r\n            ...user\r\n        })\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (id !== undefined) {\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        await buscaId(`usuarios/${id}`, setUser, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function atualizar(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (userResult.id == user.id && userResult.senha == user.senha) {\r\n            try {\r\n                await put(`/usuarios/atualizar`, user, setUserResult, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Perfil atualizado com sucesso.', {\r\n                    position: 'top-right',\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: 'colored',\r\n                    progress: undefined,\r\n                });\r\n            } catch (error) {\r\n                toast.info('Usuario deslogado.', {\r\n                    position: 'top-right',\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: 'colored',\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n        \r\n        back()\r\n\r\n    }        \r\n\r\n    function back() {\r\n        history.push('/perfil')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"sm\" className='largura'>\r\n                <form onSubmit={atualizar} className='atualizar-perfil'>\r\n                    <Typography variant=\"h3\" className='h1-perfil' component=\"h1\" align=\"center\" >Atualizar Perfil</Typography>\r\n                    <TextField value={user.nome} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPerfil(e)} id=\"nome\" label=\"Nome Completo\" variant=\"outlined\" name=\"nome\" margin=\"normal\" fullWidth />\r\n                    <TextField value={user.usuario} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPerfil(e)} id=\"usuario\" label=\"E-mail\" name=\"usuario\" type='email' variant=\"outlined\" margin=\"normal\" fullWidth />\r\n                    <TextField value={user.senha} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPerfil(e)} id=\"senha\" label=\"Senha\" name=\"senha\" type='password' variant=\"outlined\" margin=\"normal\" fullWidth />\r\n                    <TextField value={user.foto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPerfil(e)} id=\"foto\" label=\"Foto\" name=\"foto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n                    <FormControl>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                    </FormControl>\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PerfilAtualizar\r\n\r\n"]},"metadata":{},"sourceType":"module"}